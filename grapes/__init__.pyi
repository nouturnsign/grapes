from typing import Callable, Literal, Self

# TODO: add docstrings
class Graph:
    def __init__(self: Self, node_count: int) -> None: ...
    def get_node_count(self: Self) -> int: ...
    def add_node(self: Self) -> int: ...
    def add_edge(self: Self, u: int, v: int) -> None: ...
    def dijkstra_path(
        self: Self, src: int, dst: int, weight: Callable[[int, int], float]
    ) -> list[int]: ...

def sgn(x: int) -> Literal[-1, 0, 1]: ...
